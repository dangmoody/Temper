matrix:
  include:
    # windows msvc C
    - name: "Windows / MSVC / C"
      os: windows
      language: c
      script:
        - cmd.exe //C 'tools\\travis_build_msvc.bat' c

    # windows msvc C++
    - name: "Windows / MSVC / C++"
      os: windows
      language: cpp
      script:
        - cmd.exe //C 'tools\\travis_build_msvc.bat' cpp

    # windows clang
    - name: "Windows / Clang"
      os: windows
      language: c
      compiler: clang
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh clang
      after_success:
        - build/example_basic_${CC}.exe
        - build/example_suite_${CC}.exe

    # windows clang++
    - name: "Windows / Clang++"
      os: windows
      language: cpp
      compiler: clang
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh clang++
      after_success:
        - build/example_cpp_${CXX}.exe

    # windows gcc
    - name: "Windows / GCC"
      os: windows
      language: c
      compiler: gcc
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh gcc
      after_success:
        - build/example_basic_${CC}.exe
        - build/example_suite_${CC}.exe

    # windows g++
    - name: "Windows / G++"
      os: windows
      language: cpp
      compiler: gcc
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh g++
      after_success:
        - build/example_cpp_${CXX}.exe

    # linux clang
    - name: "Linux / Clang"
      os: linux
      language: c
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7
      before_install:
        - CC=clang-7
        - CXX=clang++-7
      install:
        - ${CC} --version
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CC}
      after_success:
        - build/example_basic_${CC}.exe
        - build/example_suite_${CC}.exe

    # linux clang++
    - name: "Linux / Clang++"
      os: linux
      language: cpp
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7
      before_install:
        - CC=clang-7
        - CXX=clang++-7
      install:
        - ${CC} --version
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CXX}
      after_success:
        - build/example_cpp_${CXX}.exe

    # linux gcc
    - name: "Linux / GCC"
      os: linux
      language: c
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - gcc-8
      before_install:
        - CC=gcc-8
        - CXX=g++-8
      install:
        - ${CC} --version
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CC}
      after_success:
        - build/example_basic_${CC}.exe
        - build/example_suite_${CC}.exe

    # linux g++
    - name: "Linux / G++"
      os: linux
      language: cpp
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      before_install:
        - CC=gcc-8
        - CXX=g++-8
      install:
        - ${CC} --version
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CXX}
      after_success:
        - build/example_cpp_${CXX}.exe

    # macOS C
    - name: "macOS / C"
      os: osx
      osx_image: xcode10.1
      language: c
      compiler: clang
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CC}
      after_success:
        - build/example_basic_${CC}.exe
        - build/example_suite_${CC}.exe

    # macOS C++
    - name: "macOS / C++"
      os: osx
      osx_image: xcode10.1
      language: cpp
      compiler: clang
      before_script: chmod +x tools/build_clang_gcc.sh
      script: ./tools/build_clang_gcc.sh ${CXX}
      after_success:
        - build/example_cpp_${CXX}.exe